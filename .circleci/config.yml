# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/testing-ios/
version: 2.1

jobs:
  node:
    working_directory: ~/compass-template
    docker: 
        - image: cimg/node:18.12
    steps: 
      - checkout

      - run: cd ./compass-numapp-template
      - restore_cache:
          key: npm-v1-{{ checksum "./compass-numapp-template/package-lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "./compass-numapp-template/package.json" }}-{{ arch }}

      - run: cd ~ && npx react-native init compass --template ~/compass-template --title "COMPASS"
      
      - save_cache:
          key: npm-v1-{{ checksum "./compass-numapp-template/package-lock.json" }}-{{ arch }}
          paths:
            - ~/.cache/npm

      - save_cache:
          key: node-v1-{{ checksum "./compass-numapp-template/package.json" }}-{{ arch }}
          paths:
            - ./compass/node_modules
      - persist_to_workspace:
          root: ../compass
          paths:
            - '*'
  build_ios:
    working_directory: ~/compass/ios
    # execution environment.
    # See: https://circleci.com/docs/configuration-reference/#docker-machine-macos-windows-executor
    macos:
      xcode: 14.2.0
    environment:
      CI: 'true'

    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - attach_workspace: 
          at: ~/compass/
      - run: pod install
      - run: fastlane scan # Run tests using Fastlane

      # Collect XML test results data to show in the UI, and save the same XML
      # files under test-results folder in the Artifacts tab
      - store_test_results:
          path: test_output
      - store_artifacts:
          path: test_output
          destination: scan-output

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - node
      - build_ios:
          requires: 
            - node

    # - build_android
    #     requires:
    #       - node
