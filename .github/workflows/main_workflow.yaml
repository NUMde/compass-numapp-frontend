# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: main workflow
on:
  push:
    branches: [main]
  pull_request:
    branches: [main, develop]
jobs:
  run_tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 24
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: cache node_modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: install npm
      run: npm install -g npm@latest
    - name: install node dependencies
      run: cd compass-numapp-template && npm ci
      env:
        CI: true
    - name: run all tests & generate coverage report
      run: cd compass-numapp-template && npm test -- --collectCoverage
    - name: upload coverage report
      uses: codecov/codecov-action@v3
      with:
        files: ./compass-numapp-template/coverage/clover.xml
        flags: unittests
        name: codecov-umbrella
  lint_annotations:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 24
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: cache node_modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: install npm
      run: npm install -g npm@latest
    - name: install node dependencies
      run:  cd compass-numapp-template && npm ci
      env:
        CI: true
    - name: run lint & generate annotations
      run: cd compass-numapp-template && npm run lint:annotate
